[{"C:\\Users\\91758\\Desktop\\learnredux\\src\\index.js":"1","C:\\Users\\91758\\Desktop\\learnredux\\src\\App.js":"2","C:\\Users\\91758\\Desktop\\learnredux\\src\\reportWebVitals.js":"3","C:\\Users\\91758\\Desktop\\learnredux\\src\\redux\\reducers.js":"4","C:\\Users\\91758\\Desktop\\learnredux\\src\\redux\\action.js":"5"},{"size":975,"mtime":1608374416400,"results":"6","hashOfConfig":"7"},{"size":977,"mtime":1608379621026,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":758,"mtime":1608378909447,"results":"10","hashOfConfig":"7"},{"size":417,"mtime":1608379630810,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"11nq26a",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\91758\\Desktop\\learnredux\\src\\index.js",[],["24","25"],"C:\\Users\\91758\\Desktop\\learnredux\\src\\App.js",["26","27"],"import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport './App.css';\nimport { onNameChange , requestRobots} from \"./redux/action\";\n\n\nconst mapStateToProps= state =>{\n  return{\n    namefield: state.changename.namefield,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending\n  }\n}\n\nconst mapDispatchToProps =(dispatch)=>{\n  return{\n    onNameChange:(event)=> dispatch(onNameChange(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  }\n \n}\n\nfunction App(props) {\n\n  useEffect(()=>{\n     props.onRequestRobots()\n  },[])\n\n  const users= props.robots\n  console.log(users)\n\n  // const[name,setName]= useState()\n\n  // const onNameChange=(e)=>{\n  //   setName(e.target.value)\n\n  return (\n    \n    <div className=\"App\">\n      <input onChange={props.onNameChange}></input>\n     <h1>hello{props.namefield}</h1>\n    </div>\n\n  );\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(App);\n","C:\\Users\\91758\\Desktop\\learnredux\\src\\reportWebVitals.js",[],"C:\\Users\\91758\\Desktop\\learnredux\\src\\redux\\reducers.js",[],"C:\\Users\\91758\\Desktop\\learnredux\\src\\redux\\action.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":21,"nodeType":"34","messageId":"35","endLine":1,"endColumn":29},{"ruleId":"36","severity":1,"message":"37","line":27,"column":5,"nodeType":"38","endLine":27,"endColumn":7,"suggestions":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["42"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [props]",{"range":"45","text":"46"},[603,605],"[props]"]